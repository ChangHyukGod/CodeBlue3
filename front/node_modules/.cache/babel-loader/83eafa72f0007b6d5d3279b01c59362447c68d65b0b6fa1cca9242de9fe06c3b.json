{"ast":null,"code":"import axios from \"axios\";\n// 백엔드 주소 ↓ : springboot 주소(컨트롤러 주소)\nconst baseURL = \"http://localhost:8000/api\";\n\n// TODO : 전체조회 : pageIndex(현재페이지번호), recordCountPerPage(화면에 보일 개수)\n// TODO             백엔드로 요청 -> 백엔드 sql 실행\n// 화살표 함수 : const 변수명 = () => {};\n// TODO : 사용법) axios.get(url);\n// 백틱 = ``(~ 밑에 있는 홑따옴표)\n// 쿼리스트링 = ?변수명=소프트코딩 / 2개 변수 사용시, & 사용\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\n  return axios.get(baseURL + `/basic/dept?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`);\n};\n\n// TODO : 부서생성 : json data(db에 생성될 객체)\n// post방식 = 숨겨서 data에 담아서 날라감\nconst insert = data => {\n  return axios.post(baseURL + \"/basic/dept\", data);\n};\n\n// TODO: 상세조회(dno): /basic/dept/{dno}\nconst get = dno => {\n  return axios.get(baseURL + `/basic/dept/${dno}`);\n};\n\n// TODO : 수정(dno) : /api/basic/dept/{dno}\nconst update = (dno, data) => {\n  return axios.put(baseURL + `/basic/dept/${dno}`, data);\n};\n\n// TODO : 삭제(dno) : /basic/dept/deletion/{dno}\nconst remove = dno => {\n  return axios.delete(baseURL + `/basic/dept/deletion/${dno}`);\n};\n\n// (새로운)객체 : getAll 넣어서 export하기 => 다른 자바스크립트에서 사용가능\nconst DeptService = {\n  getAll,\n  insert,\n  get,\n  update,\n  remove\n};\nexport default DeptService;","map":{"version":3,"names":["axios","baseURL","getAll","searchKeyword","pageIndex","recordCountPerPage","get","insert","data","post","dno","update","put","remove","delete","DeptService"],"sources":["D:/Work/10_Springboot/04_Login/frontend/src/services/basic/DeptService.js"],"sourcesContent":["import axios from \"axios\";\r\n// 백엔드 주소 ↓ : springboot 주소(컨트롤러 주소)\r\nconst baseURL = \"http://localhost:8000/api\"\r\n\r\n// TODO : 전체조회 : pageIndex(현재페이지번호), recordCountPerPage(화면에 보일 개수)\r\n// TODO             백엔드로 요청 -> 백엔드 sql 실행\r\n// 화살표 함수 : const 변수명 = () => {};\r\n// TODO : 사용법) axios.get(url);\r\n// 백틱 = ``(~ 밑에 있는 홑따옴표)\r\n// 쿼리스트링 = ?변수명=소프트코딩 / 2개 변수 사용시, & 사용\r\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\r\n    return axios.get(baseURL+`/basic/dept?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`);\r\n};\r\n\r\n// TODO : 부서생성 : json data(db에 생성될 객체)\r\n// post방식 = 숨겨서 data에 담아서 날라감\r\nconst insert = (data) => {\r\n    return axios.post(baseURL+\"/basic/dept\", data);\r\n}\r\n\r\n// TODO: 상세조회(dno): /basic/dept/{dno}\r\nconst get = (dno) => {\r\n    return axios.get(baseURL+`/basic/dept/${dno}`);\r\n}\r\n\r\n// TODO : 수정(dno) : /api/basic/dept/{dno}\r\nconst update = (dno, data) => {\r\n    return axios.put(baseURL+`/basic/dept/${dno}`, data);\r\n}\r\n\r\n// TODO : 삭제(dno) : /basic/dept/deletion/{dno}\r\nconst remove = (dno)=>{\r\n    return axios.delete(baseURL+`/basic/dept/deletion/${dno}`);\r\n}\r\n\r\n// (새로운)객체 : getAll 넣어서 export하기 => 다른 자바스크립트에서 사용가능\r\nconst DeptService = {\r\n    getAll,\r\n    insert,\r\n    get,\r\n    update,\r\n    remove\r\n}\r\nexport default DeptService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,KAAK;EAC7D,OAAOL,KAAK,CAACM,GAAG,CAACL,OAAO,GAAC,6BAA6BE,aAAa,cAAcC,SAAS,uBAAuBC,kBAAkB,EAAE,CAAC;AAC1I,CAAC;;AAED;AACA;AACA,MAAME,MAAM,GAAIC,IAAI,IAAK;EACrB,OAAOR,KAAK,CAACS,IAAI,CAACR,OAAO,GAAC,aAAa,EAAEO,IAAI,CAAC;AAClD,CAAC;;AAED;AACA,MAAMF,GAAG,GAAII,GAAG,IAAK;EACjB,OAAOV,KAAK,CAACM,GAAG,CAACL,OAAO,GAAC,eAAeS,GAAG,EAAE,CAAC;AAClD,CAAC;;AAED;AACA,MAAMC,MAAM,GAAGA,CAACD,GAAG,EAAEF,IAAI,KAAK;EAC1B,OAAOR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAC,eAAeS,GAAG,EAAE,EAAEF,IAAI,CAAC;AACxD,CAAC;;AAED;AACA,MAAMK,MAAM,GAAIH,GAAG,IAAG;EAClB,OAAOV,KAAK,CAACc,MAAM,CAACb,OAAO,GAAC,wBAAwBS,GAAG,EAAE,CAAC;AAC9D,CAAC;;AAED;AACA,MAAMK,WAAW,GAAG;EAChBb,MAAM;EACNK,MAAM;EACND,GAAG;EACHK,MAAM;EACNE;AACJ,CAAC;AACD,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}