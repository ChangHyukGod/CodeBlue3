{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FileDbService from \"@/services/advanced/FileDbService\";\nexport default {\n  data() {\n    return {\n      fileDb: {\n        uuid: this.$route.params.uuid,\n        // 기본키\n        fileTitle: \"\",\n        fileContent: \"\",\n        fileUrl: \"\",\n        // 다운로드 url\n        image: undefined // 선택이미지\n      }\n    };\n  },\n  methods: {\n    async getDetail(uuid) {\n      try {\n        let response = await FileDbService.get(uuid);\n        console.log(response.data); // 디버깅\n        this.fileDb = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    select() {\n      this.fileDb.image = this.$refs.file.files[0];\n    },\n    async update() {\n      try {\n        // TODO: fileDB -> fileDb 고칠것\n        let response = await FileDbService.update(this.fileDb.uuid, this.fileDb);\n        console.log(response.data); // 디버깅\n        alert(\"수정되었습니다.\");\n      } catch (error) {\n        this.fileDb.image = undefined;\n        console.log(error);\n      }\n    },\n    async remove() {\n      try {\n        let response = await FileDbService.remove(this.fileDb.uuid);\n        console.log(response.data); // 디버깅\n        // 전체조회 화면 강제 이동\n        this.$router.push(\"/fileDb\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  mounted() {\n    this.getDetail(this.$route.params.uuid);\n  }\n};","map":{"version":3,"names":["FileDbService","data","fileDb","uuid","$route","params","fileTitle","fileContent","fileUrl","image","undefined","methods","getDetail","response","get","console","log","error","select","$refs","file","files","update","alert","remove","$router","push","mounted"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\advanced\\fileDb\\FileDbDetail.vue"],"sourcesContent":["// FileDbDetail.vue // vueInit\r\n<template>\r\n  <div>\r\n    <!-- fileTitle -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"fileTitle\"\r\n        placeholder=\"fileTitle\"\r\n        v-model=\"fileDb.fileTitle\"\r\n      />\r\n      <label for=\"fileTitle\">fileTitle</label>\r\n    </div>\r\n    <!-- fileContent -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"fileContent\"\r\n        placeholder=\"fileContent\"\r\n        v-model=\"fileDb.fileContent\"\r\n      />\r\n      <label for=\"fileContent\">fileContent</label>\r\n    </div>\r\n\r\n    <!-- TODO: 현재 이미지 보기 -->\r\n    <div class=\"mb-3 col-12\">\r\n      <img :src=\"fileDb.fileUrl\" width=\"200px\" alt=\"이미지\" />\r\n    </div>\r\n\r\n    <!-- 파일선택상자 -->\r\n    <div class=\"input-group\">\r\n      <input type=\"file\" class=\"form-control\" ref=\"file\" @change=\"select\" />\r\n      <button class=\"btn btn-warning\" type=\"button\" @click=\"update\">\r\n        수정\r\n      </button>\r\n    </div>\r\n    <div class=\"mt-3\">\r\n      <button class=\"btn btn-danger\" type=\"button\" @click=\"remove\">삭제</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FileDbService from \"@/services/advanced/FileDbService\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileDb: {\r\n        uuid: this.$route.params.uuid, // 기본키\r\n        fileTitle: \"\",\r\n        fileContent: \"\",\r\n        fileUrl: \"\", // 다운로드 url\r\n        image: undefined, // 선택이미지\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async getDetail(uuid) {\r\n      try {\r\n        let response = await FileDbService.get(uuid);\r\n        console.log(response.data); // 디버깅\r\n        this.fileDb = response.data;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    select() {\r\n      this.fileDb.image = this.$refs.file.files[0];\r\n    },\r\n    async update() {\r\n      try {\r\n        // TODO: fileDB -> fileDb 고칠것\r\n        let response = await FileDbService.update(\r\n          this.fileDb.uuid,\r\n          this.fileDb\r\n        );\r\n        console.log(response.data); // 디버깅\r\n        alert(\"수정되었습니다.\")\r\n      } catch (error) {\r\n        this.fileDb.image = undefined;\r\n        console.log(error);\r\n      }\r\n    },\r\n    async remove() {\r\n      try {\r\n        let response = await FileDbService.remove(this.fileDb.uuid);\r\n        console.log(response.data); // 디버깅\r\n        // 전체조회 화면 강제 이동\r\n        this.$router.push(\"/fileDb\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getDetail(this.$route.params.uuid);\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";AA6CA,OAAOA,aAAY,MAAO,mCAAmC;AAC7D,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNC,IAAI,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,IAAI;QAAE;QAC/BG,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QAAE;QACbC,KAAK,EAAEC,SAAS,CAAE;MACpB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAACT,IAAI,EAAE;MACpB,IAAI;QACF,IAAIU,QAAO,GAAI,MAAMb,aAAa,CAACc,GAAG,CAACX,IAAI,CAAC;QAC5CY,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACC,MAAK,GAAIW,QAAQ,CAACZ,IAAI;MAC7B,EAAE,OAAOgB,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAAChB,MAAM,CAACO,KAAI,GAAI,IAAI,CAACU,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF;QACA,IAAIT,QAAO,GAAI,MAAMb,aAAa,CAACsB,MAAM,CACvC,IAAI,CAACpB,MAAM,CAACC,IAAI,EAChB,IAAI,CAACD,MACP,CAAC;QACDa,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5BsB,KAAK,CAAC,UAAU;MAClB,EAAE,OAAON,KAAK,EAAE;QACd,IAAI,CAACf,MAAM,CAACO,KAAI,GAAIC,SAAS;QAC7BK,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMO,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAIX,QAAO,GAAI,MAAMb,aAAa,CAACwB,MAAM,CAAC,IAAI,CAACtB,MAAM,CAACC,IAAI,CAAC;QAC3DY,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5B;QACA,IAAI,CAACwB,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;MAC9B,EAAE,OAAOT,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,SAAS,CAAC,IAAI,CAACR,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC;EACzC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}