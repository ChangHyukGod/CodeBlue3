{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MemberService from \"@/services/auth/MemberService\";\nexport default {\n  data() {\n    return {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      errorMessage: \"\" // 에러 메시지 상태 관리\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        let response = await MemberService.login(this.user);\n        console.log(response.data);\n\n        // 로그인 성공 시 처리\n        this.$store.state.loggedIn = true;\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        this.errorMessage = \"\"; // 에러 메시지 초기화\n\n        this.$router.push(\"/\");\n      } catch (error) {\n        // 로그인 실패 시 에러 메시지 설정\n        this.$store.state.loggedIn = false;\n        this.errorMessage = \"로그인에 실패했습니다. 아이디 또는 비밀번호를 확인해주세요.\";\n        console.log(error);\n      }\n    }\n  },\n  mounted() {\n    // 이미 로그인된 상태라면 홈으로 리다이렉트\n    if (this.$store.state.loggedIn === true) {\n      this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["MemberService","data","user","email","password","errorMessage","methods","login","response","console","log","$store","state","loggedIn","localStorage","setItem","JSON","stringify","$router","push","error","mounted"],"sources":["C:\\Users\\82107\\OneDrive\\문서\\GitHub\\CodeBlue2\\Codeblue\\front\\src\\views\\auth\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\r\n        <div class=\"card mt-5\">\r\n          <div class=\"card-body p-0\">\r\n            <!-- Nested Row within Card Body -->\r\n            <div class=\"row\">\r\n              <!-- TODO: 이미지(좌) -->\r\n              <div class=\"col-lg-6\">\r\n                <!-- <img\r\n                  src=\"@/assets/images/puppy-1920_1280_2.jpg\"\r\n                  class=\"img-fluid\"\r\n                /> -->\r\n              </div>\r\n              <!-- TODO: 입력양식(우) -->\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"p-5\">\r\n                  <div class=\"text-center\">\r\n                    <h1 class=\"h4 mb-4\">Welcome Back!</h1>\r\n                  </div>\r\n                  <div class=\"user\">\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"이메일을 넣기\"\r\n                        v-model=\"user.email\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"패스워드 넣기\"\r\n                        v-model=\"user.password\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      class=\"btn btn-primary btn-user w-100 mb-3\"\r\n                      @click=\"login\"\r\n                    >\r\n                      Login\r\n                    </button>\r\n                    <!-- 에러 메시지 표시 -->\r\n                    <div\r\n                      v-if=\"errorMessage\"\r\n                      class=\"alert alert-danger d-flex align-items-center mt-3\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <i class=\"bi bi-exclamation-circle me-2\"></i>\r\n                      {{ errorMessage }}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div class=\"text-center\">\r\n                    <a class=\"small\" href=\"/register\"> Create an Account! </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MemberService from \"@/services/auth/MemberService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      errorMessage: \"\", // 에러 메시지 상태 관리\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        let response = await MemberService.login(this.user);\r\n        console.log(response.data);\r\n\r\n        // 로그인 성공 시 처리\r\n        this.$store.state.loggedIn = true;\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n        this.errorMessage = \"\"; // 에러 메시지 초기화\r\n\r\n        this.$router.push(\"/\");\r\n      } catch (error) {\r\n        // 로그인 실패 시 에러 메시지 설정\r\n        this.$store.state.loggedIn = false;\r\n\r\n        this.errorMessage =\r\n          \"로그인에 실패했습니다. 아이디 또는 비밀번호를 확인해주세요.\";\r\n\r\n        console.log(error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // 이미 로그인된 상태라면 홈으로 리다이렉트\r\n    if (this.$store.state.loggedIn === true) {\r\n      this.$router.push(\"/\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.alert {\r\n  font-size: 0.9rem;\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n}\r\n.alert-danger {\r\n  background-color: #f8d7da;\r\n  color: #842029;\r\n  border: 1px solid #f5c2c7;\r\n}\r\n.alert .bi {\r\n  font-size: 1.2rem;\r\n}\r\n</style>\r\n"],"mappings":";AAqEA,OAAOA,aAAY,MAAO,+BAA+B;AAEzD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,IAAIC,QAAO,GAAI,MAAMR,aAAa,CAACO,KAAK,CAAC,IAAI,CAACL,IAAI,CAAC;QACnDO,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACP,IAAI,CAAC;;QAE1B;QACA,IAAI,CAACU,MAAM,CAACC,KAAK,CAACC,QAAO,GAAI,IAAI;QAEjCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAACP,IAAI,CAAC,CAAC;QAE3D,IAAI,CAACI,YAAW,GAAI,EAAE,EAAE;;QAExB,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACd;QACA,IAAI,CAACT,MAAM,CAACC,KAAK,CAACC,QAAO,GAAI,KAAK;QAElC,IAAI,CAACR,YAAW,GACd,mCAAmC;QAErCI,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,IAAI,CAACV,MAAM,CAACC,KAAK,CAACC,QAAO,KAAM,IAAI,EAAE;MACvC,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}