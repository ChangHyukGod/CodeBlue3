{"ast":null,"code":"// services - DeptService.js\nimport axios from \"axios\";\n// 벡엔드 주소 : springboot 주소(컨트롤러주소)\nconst baseURL = \"http://localhost:8000/api\";\n\n// TODO: 전체조회 : pageIndex(현재페이지번호), recordCountPerPage(화면에보일개수)\n// TODO:           벡엔드로 요청 -> 벡엔드 sql 실행\n// TODO: 사용법) axios.get(url);\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\n  return axios.get(baseURL + `/basic/dept?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`);\n};\n// TODO: 부서생성 : url(/basic/dept)\n//                 json data(db에 생성될 객체)\nconst insert = data => {\n  return axios.post(baseURL + \"/basic/dept\", data);\n};\n// TODO: 상세조회(dno): /basic/dept/{dno}\nconst get = dno => {\n  return axios.get(baseURL + `/basic/dept/${dno}`);\n};\n// TODO: 수정(dno, data) : 벡엔드 수정 url : /basic/dept/{dno}\nconst update = (dno, data) => {\n  return axios.put(baseURL + `/basic/dept/${dno}`, data);\n};\n// TODO: 삭제(dno) : 벡엔드 삭제 url:\n//            /basic/dept/deletion/{dno}\nconst remove = dno => {\n  return axios.delete(baseURL + `/basic/dept/deletion/${dno}`);\n};\n// 객체 : getAll 넣어 export\nconst DeptService = {\n  getAll,\n  insert,\n  get,\n  update,\n  remove\n};\nexport default DeptService;","map":{"version":3,"names":["axios","baseURL","getAll","searchKeyword","pageIndex","recordCountPerPage","get","insert","data","post","dno","update","put","remove","delete","DeptService"],"sources":["D:/Work/10_Springboot/04_Login/frontend/src/services/basic/DeptService.js"],"sourcesContent":["// services - DeptService.js\r\nimport axios from \"axios\";\r\n// 벡엔드 주소 : springboot 주소(컨트롤러주소)\r\nconst baseURL = \"http://localhost:8000/api\"\r\n\r\n// TODO: 전체조회 : pageIndex(현재페이지번호), recordCountPerPage(화면에보일개수)\r\n// TODO:           벡엔드로 요청 -> 벡엔드 sql 실행\r\n// TODO: 사용법) axios.get(url);\r\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\r\n    return axios\r\n       .get(baseURL+`/basic/dept?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`);\r\n};\r\n// TODO: 부서생성 : url(/basic/dept)\r\n//                 json data(db에 생성될 객체)\r\nconst insert = (data) => {\r\n    return axios.post(baseURL+\"/basic/dept\", data);\r\n}\r\n// TODO: 상세조회(dno): /basic/dept/{dno}\r\nconst get = (dno) => {\r\n    return axios.get(baseURL+`/basic/dept/${dno}`);\r\n}\r\n// TODO: 수정(dno, data) : 벡엔드 수정 url : /basic/dept/{dno}\r\nconst update = (dno, data)=>{\r\n    return axios.put(baseURL+`/basic/dept/${dno}`,data);\r\n}\r\n// TODO: 삭제(dno) : 벡엔드 삭제 url:\r\n//            /basic/dept/deletion/{dno}\r\nconst remove = (dno)=>{\r\n    return axios.delete(baseURL+`/basic/dept/deletion/${dno}`);\r\n}\r\n// 객체 : getAll 넣어 export\r\nconst DeptService = {\r\n    getAll,\r\n    insert,\r\n    get,\r\n    update,\r\n    remove\r\n}\r\nexport default DeptService;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,KAAK;EAC7D,OAAOL,KAAK,CACRM,GAAG,CAACL,OAAO,GAAC,6BAA6BE,aAAa,cAAcC,SAAS,uBAAuBC,kBAAkB,EAAE,CAAC;AACjI,CAAC;AACD;AACA;AACA,MAAME,MAAM,GAAIC,IAAI,IAAK;EACrB,OAAOR,KAAK,CAACS,IAAI,CAACR,OAAO,GAAC,aAAa,EAAEO,IAAI,CAAC;AAClD,CAAC;AACD;AACA,MAAMF,GAAG,GAAII,GAAG,IAAK;EACjB,OAAOV,KAAK,CAACM,GAAG,CAACL,OAAO,GAAC,eAAeS,GAAG,EAAE,CAAC;AAClD,CAAC;AACD;AACA,MAAMC,MAAM,GAAGA,CAACD,GAAG,EAAEF,IAAI,KAAG;EACxB,OAAOR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAC,eAAeS,GAAG,EAAE,EAACF,IAAI,CAAC;AACvD,CAAC;AACD;AACA;AACA,MAAMK,MAAM,GAAIH,GAAG,IAAG;EAClB,OAAOV,KAAK,CAACc,MAAM,CAACb,OAAO,GAAC,wBAAwBS,GAAG,EAAE,CAAC;AAC9D,CAAC;AACD;AACA,MAAMK,WAAW,GAAG;EAChBb,MAAM;EACNK,MAAM;EACND,GAAG;EACHK,MAAM;EACNE;AACJ,CAAC;AACD,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}