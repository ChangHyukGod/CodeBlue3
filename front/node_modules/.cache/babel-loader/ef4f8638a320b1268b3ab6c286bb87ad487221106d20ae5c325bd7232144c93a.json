{"ast":null,"code":"// 프론트 코딩 : 백엔드(변수를 보내고) -> 백엔드(sql 실행 후 결과 리턴) -> 프론트(json 반복문으로 화면출력)\n// @ : 절대경로, @ = src폴더\nimport DeptService from \"@/services/basic/DeptService\";\nexport default {\n  data() {\n    return {\n      pageIndex: 1,\n      //현재 페이지 번호\n      totalCount: 0,\n      //전체 개수\n      recodeCountPerPage: 3,\n      //화면에 보일 개수\n      searchKeyword: \"\",\n      //검색어\n      depts: [] //빈배열(json)\n    };\n  },\n  // 함수작성 : 비동기코딩 = async/await\n  // 복습) 뷰함수 앞에 : async / axios 함수 앞에 : await\n  methods: {\n    async getDept() {\n      // 예외처리 : trycatch 자동완성\n      try {\n        // 백엔드는 0번부터 1페이지, 프론트는 1번부터 1페이지라 pageIndex-1로 보내야 백엔드에서 0번부터 볼 수 있음\n        let response = await DeptService.getAll(this.searchKeyword, this.pageIndex - 1, this.recodeCountPerPage);\n        // TODO : 백엔드에서 전송되는 것 : results(배열, Dto), totalCount(총개수) => 를 받는 함수\n        const {\n          results,\n          totalCount\n        } = response.data;\n        // 디버깅\n        console.log(response.data);\n        this.depts = results;\n        this.totalCount = totalCount;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  // 화면이 뜰때 실행하는 함수\n  mounted() {\n    this.getDept();\n  }\n};","map":{"version":3,"names":["DeptService","data","pageIndex","totalCount","recodeCountPerPage","searchKeyword","depts","methods","getDept","response","getAll","results","console","log","error","mounted"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\basic\\dept\\DeptView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <!-- TODO : 검색어 입력상자 -->\r\n      <div class=\"input-group mb-3\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"검색어\" v-model=\"searchKeyword\" />\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" @click=\"getDept\">검색</button>\r\n      </div>\r\n      <!-- TODO : 부트스트랩 테이블 -->\r\n      <table class=\"table\">\r\n          <thead>\r\n              <tr>\r\n                  <th scope=\"col\">dno</th>\r\n                  <th scope=\"col\">dname</th>\r\n                  <th scope=\"col\">loc</th>\r\n                  <th scope=\"col\">action</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr v-for=\"(data, index) in depts\" :key=\"index\">\r\n                  <td>{{data.dno}}</td>\r\n                  <td>{{data.dname}}</td>\r\n                  <td>{{data.loc}}</td>\r\n                  <td>\r\n                  <!-- 페이지 이동 링크 : a태그, router-link태그 -->\r\n                  <!-- vue변수 사용 시 콜론: 사용 -->\r\n                  <!-- :to= ' \"url\" + 기본키 ' -->\r\n                  <router-link :to='\"/dept/\" + data.dno'>\r\n                  <span class=\"badge text-bg-success\">수정</span>\r\n                  </router-link>\r\n                  </td>\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n      <!-- TODO : 페이지 번호 : 부트스트랩뷰(페이지) -->\r\n      <div>\r\n          <!-- TODO : v-model=\"뷰변수(현재페이지번호)\"\r\n                      ,total-rows=\"전체개수\"\r\n                      ,per-page=\"1페이지당화면에보일개수\" -->\r\n          <b-pagination\r\n              v-model=\"pageIndex\"\r\n              :total-rows=\"totalCount\"\r\n              :per-page=\"recodeCountPerPage\"\r\n              @click=\"getDept\"\r\n              ></b-pagination>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// 프론트 코딩 : 백엔드(변수를 보내고) -> 백엔드(sql 실행 후 결과 리턴) -> 프론트(json 반복문으로 화면출력)\r\n// @ : 절대경로, @ = src폴더\r\nimport DeptService from \"@/services/basic/DeptService\";\r\nexport default {\r\n  data() {\r\n      return {\r\n          pageIndex: 1,  //현재 페이지 번호\r\n          totalCount: 0,  //전체 개수\r\n          recodeCountPerPage: 3,  //화면에 보일 개수\r\n          searchKeyword: \"\",  //검색어\r\n          depts: [],  //빈배열(json)\r\n      }\r\n  },\r\n  // 함수작성 : 비동기코딩 = async/await\r\n  // 복습) 뷰함수 앞에 : async / axios 함수 앞에 : await\r\n  methods: {\r\n      async getDept(){\r\n          // 예외처리 : trycatch 자동완성\r\n          try {\r\n              // 백엔드는 0번부터 1페이지, 프론트는 1번부터 1페이지라 pageIndex-1로 보내야 백엔드에서 0번부터 볼 수 있음\r\n              let response = await DeptService.getAll(this.searchKeyword,this.pageIndex-1,this.recodeCountPerPage);\r\n              // TODO : 백엔드에서 전송되는 것 : results(배열, Dto), totalCount(총개수) => 를 받는 함수\r\n              const {results, totalCount} = response.data;\r\n              // 디버깅\r\n              console.log(response.data);\r\n              this.depts = results;\r\n              this.totalCount = totalCount;\r\n          } catch (error) {\r\n              console.log(error);\r\n          }\r\n      }\r\n  },\r\n  // 화면이 뜰때 실행하는 함수\r\n  mounted() {\r\n      this.getDept();\r\n  },\r\n}\r\n</script>\r\n<style></style>"],"mappings":"AAgDA;AACA;AACA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,CAAC;MAAG;MACfC,UAAU,EAAE,CAAC;MAAG;MAChBC,kBAAkB,EAAE,CAAC;MAAG;MACxBC,aAAa,EAAE,EAAE;MAAG;MACpBC,KAAK,EAAE,EAAE,CAAG;IAChB;EACJ,CAAC;EACD;EACA;EACAC,OAAO,EAAE;IACL,MAAMC,OAAOA,CAAA,EAAE;MACX;MACA,IAAI;QACA;QACA,IAAIC,QAAO,GAAI,MAAMT,WAAW,CAACU,MAAM,CAAC,IAAI,CAACL,aAAa,EAAC,IAAI,CAACH,SAAS,GAAC,CAAC,EAAC,IAAI,CAACE,kBAAkB,CAAC;QACpG;QACA,MAAM;UAACO,OAAO;UAAER;QAAU,IAAIM,QAAQ,CAACR,IAAI;QAC3C;QACAW,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACR,IAAI,CAAC;QAC1B,IAAI,CAACK,KAAI,GAAIK,OAAO;QACpB,IAAI,CAACR,UAAS,GAAIA,UAAU;MAChC,EAAE,OAAOW,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACP,OAAO,CAAC,CAAC;EAClB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}