{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FileDbService from '@/services/advanced/FileDbService';\nexport default {\n  data() {\n    return {\n      fileDb: {\n        fileTitle: \"\",\n        fileContent: \"\",\n        fileUrl: \"\",\n        // 다운로드 url\n        image: undefined // 선택이미지\n      }\n    };\n  },\n  methods: {\n    select() {\n      // 파일선택상자에서 선택한 이미지를 저장\n      // TODO: 파일선택상자 태그 : input type=\"file\"\n      // 특징 : 첫번째 선택하면(이미지) files[0] 배열에 저장 \n      // 사용법 : this.$refs.태그변수 : html 태그 접근\n      this.fileDb.image = this.$refs.file.files[0];\n    },\n    async save() {\n      try {\n        let response = await FileDbService.insert(this.fileDb);\n        console.log(response.data); // 디버깅\n        // insert 성공 -> 전체조회 강제 이동\n        this.$router.push(\"/fileDb\");\n      } catch (error) {\n        this.fileDb.image = undefined;\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["FileDbService","data","fileDb","fileTitle","fileContent","fileUrl","image","undefined","methods","select","$refs","file","files","save","response","insert","console","log","$router","push","error"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\advanced\\fileDb\\AddFileDb.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- fileTitle -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"fileTitle\"\r\n        placeholder=\"fileTitle\"\r\n        v-model=\"fileDb.fileTitle\"\r\n      />\r\n      <label for=\"fileTitle\">fileTitle</label>\r\n    </div>\r\n    <!-- fileContent -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"fileContent\"\r\n        placeholder=\"fileContent\"\r\n        v-model=\"fileDb.fileContent\"\r\n      />\r\n      <label for=\"fileContent\">fileContent</label>\r\n    </div>\r\n    <!-- TODO: 파일선택상자 -->\r\n    <div class=\"input-group\">\r\n      <input\r\n        type=\"file\"\r\n        class=\"form-control\"\r\n        ref=\"file\"\r\n        @change=\"select\"\r\n      />\r\n      <button\r\n        class=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        @click=\"save\"\r\n      >\r\n        Button\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FileDbService from '@/services/advanced/FileDbService';\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileDb: {\r\n        fileTitle: \"\",\r\n        fileContent: \"\",\r\n        fileUrl: \"\", // 다운로드 url\r\n        image: undefined, // 선택이미지\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    select(){\r\n      // 파일선택상자에서 선택한 이미지를 저장\r\n      // TODO: 파일선택상자 태그 : input type=\"file\"\r\n      // 특징 : 첫번째 선택하면(이미지) files[0] 배열에 저장 \r\n      // 사용법 : this.$refs.태그변수 : html 태그 접근\r\n      this.fileDb.image = this.$refs.file.files[0];\r\n    },\r\n    async save(){\r\n      try {\r\n        let response = await FileDbService.insert(this.fileDb);\r\n        console.log(response.data); // 디버깅\r\n        // insert 성공 -> 전체조회 강제 이동\r\n        this.$router.push(\"/fileDb\");\r\n      } catch (error) {\r\n        this.fileDb.image = undefined;\r\n        console.log(error);\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";AA4CA,OAAOA,aAAY,MAAO,mCAAmC;AAC7D,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNC,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QAAE;QACbC,KAAK,EAAEC,SAAS,CAAE;MACpB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAE;MACN;MACA;MACA;MACA;MACA,IAAI,CAACP,MAAM,CAACI,KAAI,GAAI,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC;IACD,MAAMC,IAAIA,CAAA,EAAE;MACV,IAAI;QACF,IAAIC,QAAO,GAAI,MAAMd,aAAa,CAACe,MAAM,CAAC,IAAI,CAACb,MAAM,CAAC;QACtDc,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACb,IAAI,CAAC,EAAE;QAC5B;QACA,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAAClB,MAAM,CAACI,KAAI,GAAIC,SAAS;QAC7BS,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}