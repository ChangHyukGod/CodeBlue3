{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_2 = {\n  class: \"col-xl-10 col-lg-12 col-md-9\"\n};\nconst _hoisted_3 = {\n  class: \"card mt-5\"\n};\nconst _hoisted_4 = {\n  class: \"card-body p-0\"\n};\nconst _hoisted_5 = {\n  class: \"row\"\n};\nconst _hoisted_6 = {\n  class: \"col-lg-6\"\n};\nconst _hoisted_7 = {\n  class: \"p-5\"\n};\nconst _hoisted_8 = {\n  class: \"user\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Nested Row within Card Body \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" TODO: 왼쪽: 이미지(강아지그림) \"), _createCommentVNode(\" <div class=\\\"col-lg-6\\\">\\r\\n                <!-- <img\\r\\n                  src=\\\"@/assets/images/puppy-1920_1280.jpg\\\"\\r\\n                  class=\\\"img-fluid\\\"\\r\\n                /> \"), _createCommentVNode(\" <img :src=\\\"require('@/assets/images/puppy-1920_1280.jpg')\\\" class=\\\"img-fluid\\\"/> \"), _createCommentVNode(\" </div> \"), _cache[7] || (_cache[7] = _createTextVNode(\" --> \")), _createCommentVNode(\" TODO: 오른쪽: email/password 입력양식  \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"text-center\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"h4 text-gray-900 mb-4\"\n  }, \"회원 가입\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control form-control-user mb-3\",\n    placeholder: \"이메일 입력\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]])]), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control form-control-user mb-3\",\n    placeholder: \"패스워드 입력\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.password]]), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control form-control-user mb-3\",\n    placeholder: \"이름 입력\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.name]])])]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-user w-100 mb-3\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.register && $options.register(...args))\n  }, \" 등록 \"), _createCommentVNode(\" 에러 메시지 표시 \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"alert alert-danger text-center\",\n    role: \"alert\",\n    innerHTML: $data.errorMessage\n  }, null, 8 /* PROPS */, _hoisted_12)) : _createCommentVNode(\"v-if\", true)]), _cache[5] || (_cache[5] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"text-center\"\n  }, [_createElementVNode(\"a\", {\n    href: \"/login\"\n  }, \" 이미 계정이 있으신가요? 로그인 하세요! \")], -1 /* HOISTED */))])])])])])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_createTextVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","type","placeholder","_cache","$event","$data","user","email","_hoisted_10","password","_hoisted_11","name","onClick","args","$options","register","errorMessage","key","role","innerHTML","_hoisted_12","href"],"sources":["C:\\Users\\82107\\OneDrive\\문서\\GitHub\\CodeBlue2\\Codeblue\\front\\src\\views\\auth\\RegisterView.vue"],"sourcesContent":["// 회원가입\r\n<template>\r\n  <div>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\r\n        <div class=\"card mt-5\">\r\n          <div class=\"card-body p-0\">\r\n            <!-- Nested Row within Card Body -->\r\n            <div class=\"row\">\r\n              <!-- TODO: 왼쪽: 이미지(강아지그림) -->\r\n              <!-- <div class=\"col-lg-6\">\r\n                <!-- <img\r\n                  src=\"@/assets/images/puppy-1920_1280.jpg\"\r\n                  class=\"img-fluid\"\r\n                /> -->\r\n                <!-- <img :src=\"require('@/assets/images/puppy-1920_1280.jpg')\" class=\"img-fluid\"/> -->\r\n              <!-- </div> --> -->\r\n              <!-- TODO: 오른쪽: email/password 입력양식  -->\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"p-5\">\r\n                  <div class=\"text-center\">\r\n                    <h1 class=\"h4 text-gray-900 mb-4\">회원 가입</h1>\r\n                  </div>\r\n                  <div class=\"user\">\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"이메일 입력\"\r\n                        v-model=\"user.email\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"패스워드 입력\"\r\n                        v-model=\"user.password\"\r\n                      />\r\n                      <div class=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control form-control-user mb-3\"\r\n                          placeholder=\"이름 입력\"\r\n                          v-model=\"user.name\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      class=\"btn btn-primary btn-user w-100 mb-3\"\r\n                      @click=\"register\"\r\n                    >\r\n                      등록\r\n                    </button>\r\n                    <!-- 에러 메시지 표시 -->\r\n                    <div\r\n                      v-if=\"errorMessage\"\r\n                      class=\"alert alert-danger text-center\"\r\n                      role=\"alert\"\r\n                      v-html=\"errorMessage\"\r\n                    ></div>\r\n                  </div>\r\n                  <hr />\r\n                  <div class=\"text-center\">\r\n                    <a href=\"/login\">\r\n                      이미 계정이 있으신가요? 로그인 하세요!\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MemberService from \"@/services/auth/MemberService\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        codeName: \"ROLE_USER\",\r\n      },\r\n\r\n      errorMessage: \"\", // 에러 메시지 상태 관리\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      try {\r\n        let response = await MemberService.insert(this.user);\r\n        console.log(response.data); // 디버깅\r\n\r\n        alert(\"회원가입이 되었습니다.\");\r\n        this.$router.push(\"/login\");\r\n      } catch (error) {\r\n        this.errorMessage = `\r\n          이미 가입된 이메일이 있습니다.\r\n        `;\r\n\r\n        console.log(error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$store.state.loggedIn == true) {\r\n      this.$router.push(\"/\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.alert {\r\n  font-size: 0.9rem;\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n}\r\n.alert-danger {\r\n  background-color: #f8d7da;\r\n  color: #842029;\r\n  border: 1px solid #f5c2c7;\r\n}\r\n.alert .bi {\r\n  font-size: 1.2rem;\r\n}\r\n</style>\r\n"],"mappings":";;EAGSA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAA8B;;EAClCA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAK;;EAUTA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAK;;EAITA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAY;;EAQlBA,KAAK,EAAC;AAAY;;EAOhBA,KAAK,EAAC;AAAY;oBAvC7C;;uBAEEC,mBAAA,CAyEM,cAxEJC,mBAAA,CAuEM,OAvENC,UAuEM,GAtEJD,mBAAA,CAqEM,OArENE,UAqEM,GApEJF,mBAAA,CAmEM,OAnENG,UAmEM,GAlEJH,mBAAA,CAiEM,OAjENI,UAiEM,GAhEJC,mBAAA,iCAAoC,EACpCL,mBAAA,CA8DM,OA9DNM,UA8DM,GA7DJD,mBAAA,0BAA6B,EAC7BA,mBAAA,2LAIQ,EACNA,mBAAA,wFAAuF,EACzFA,mBAAA,YAAe,E,0BAhB7BE,gBAAA,CAgB6B,OACf,IAAAF,mBAAA,qCAAwC,EACxCL,mBAAA,CAmDM,OAnDNQ,UAmDM,GAlDJR,mBAAA,CAiDM,OAjDNS,UAiDM,G,0BAhDJT,mBAAA,CAEM;IAFDF,KAAK,EAAC;EAAa,IACtBE,mBAAA,CAA4C;IAAxCF,KAAK,EAAC;EAAuB,GAAC,OAAK,E,sBAEzCE,mBAAA,CAsCM,OAtCNU,UAsCM,GArCJV,mBAAA,CAOM,OAPNW,UAOM,G,gBANJX,mBAAA,CAKE;IAJAY,IAAI,EAAC,OAAO;IACZd,KAAK,EAAC,qCAAqC;IAC3Ce,WAAW,EAAC,QAAQ;IA5B5C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6BiCC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAH,MAAA;iDAAVC,KAAA,CAAAC,IAAI,CAACC,KAAK,E,KAGvBlB,mBAAA,CAeM,OAfNmB,WAeM,G,gBAdJnB,mBAAA,CAKE;IAJAY,IAAI,EAAC,UAAU;IACfd,KAAK,EAAC,qCAAqC;IAC3Ce,WAAW,EAAC,SAAS;IApC7C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqCiCC,KAAA,CAAAC,IAAI,CAACG,QAAQ,GAAAL,MAAA;iDAAbC,KAAA,CAAAC,IAAI,CAACG,QAAQ,E,GAExBpB,mBAAA,CAOM,OAPNqB,WAOM,G,gBANJrB,mBAAA,CAKE;IAJAY,IAAI,EAAC,MAAM;IACXd,KAAK,EAAC,qCAAqC;IAC3Ce,WAAW,EAAC,OAAO;IA3C7C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4CmCC,KAAA,CAAAC,IAAI,CAACK,IAAI,GAAAP,MAAA;iDAATC,KAAA,CAAAC,IAAI,CAACK,IAAI,E,OAIxBtB,mBAAA,CAKS;IAJPF,KAAK,EAAC,qCAAqC;IAC1CyB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KACjB,MAED,GACAnB,mBAAA,eAAkB,EAEVW,KAAA,CAAAW,YAAY,I,cADpB5B,mBAAA,CAKO;IA5D3B6B,GAAA;IAyDsB9B,KAAK,EAAC,gCAAgC;IACtC+B,IAAI,EAAC,OAAO;IACZC,SAAqB,EAAbd,KAAA,CAAAW;0BA3D9BI,WAAA,KAAA1B,mBAAA,e,6BA8DkBL,mBAAA,CAAM,sC,0BACNA,mBAAA,CAIM;IAJDF,KAAK,EAAC;EAAa,IACtBE,mBAAA,CAEI;IAFDgC,IAAI,EAAC;EAAQ,GAAC,0BAEjB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}