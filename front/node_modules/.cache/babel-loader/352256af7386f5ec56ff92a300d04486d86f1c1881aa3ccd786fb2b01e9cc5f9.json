{"ast":null,"code":"// services - EmpService.js\nimport axios from \"axios\";\nconst baseURL = \"http://localhost:8000/api\";\n\n// // TODO: 웹토큰 가져오기(로컬스토리지) , user.accessToken\n// let user = JSON.parse(localStorage.getItem(\"user\"));\n// // TODO: 벡엔드 전송(웹토큰)\n// // 예 : headers : { Authorization: \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIi...\" }\n// const token = { Authorization: \"Bearer \"+ user?.accessToken };\n// // TODO: 전송 : axios.get(\"url\", {headers: token}), axios.post(\"url\", data, {headers: token})\n\n// 전체조회\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\n  return axios.get(baseURL + `/basic/emp?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`, {\n    headers: token\n  });\n};\n// TODO: 사원생성 : url(/basic/emp)\nconst insert = data => {\n  return axios.post(baseURL + \"/basic/emp\", data, {\n    headers: token\n  });\n};\n// TODO: 상세조회 : url(/basic/emp/{eno})\nconst get = eno => {\n  return axios.get(baseURL + `/basic/emp/${eno}`, {\n    headers: token\n  });\n};\n// TODO: 수정(dno, data) : 벡엔드 수정 url : /basic/emp/{eno}\nconst update = (eno, data) => {\n  return axios.put(baseURL + `/basic/emp/${eno}`, data, {\n    headers: token\n  });\n};\n// TODO: 삭제(eno) : 벡엔드 삭제 url: /basic/emp/deletion/{eno}\nconst remove = eno => {\n  return axios.delete(baseURL + `/basic/emp/deletion/${eno}`, {\n    headers: token\n  });\n};\n// 객체 : getAll 넣어 export\nconst EmpService = {\n  getAll,\n  insert,\n  get,\n  update,\n  remove\n};\nexport default EmpService;","map":{"version":3,"names":["axios","baseURL","getAll","searchKeyword","pageIndex","recordCountPerPage","get","headers","token","insert","data","post","eno","update","put","remove","delete","EmpService"],"sources":["D:/Work/10_Springboot/04_Login/frontend/src/services/basic/EmpService.js"],"sourcesContent":["// services - EmpService.js\r\nimport axios from \"axios\";\r\nconst baseURL = \"http://localhost:8000/api\"\r\n\r\n// // TODO: 웹토큰 가져오기(로컬스토리지) , user.accessToken\r\n// let user = JSON.parse(localStorage.getItem(\"user\"));\r\n// // TODO: 벡엔드 전송(웹토큰)\r\n// // 예 : headers : { Authorization: \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIi...\" }\r\n// const token = { Authorization: \"Bearer \"+ user?.accessToken };\r\n// // TODO: 전송 : axios.get(\"url\", {headers: token}), axios.post(\"url\", data, {headers: token})\r\n\r\n// 전체조회\r\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\r\n    return axios\r\n       .get(baseURL+`/basic/emp?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`, {headers: token});\r\n};\r\n// TODO: 사원생성 : url(/basic/emp)\r\nconst insert = (data) => {\r\n    return axios.post(baseURL+\"/basic/emp\", data, {headers: token});\r\n}\r\n// TODO: 상세조회 : url(/basic/emp/{eno})\r\nconst get = (eno) => {\r\n    return axios.get(baseURL+`/basic/emp/${eno}`, {headers: token});\r\n}\r\n// TODO: 수정(dno, data) : 벡엔드 수정 url : /basic/emp/{eno}\r\nconst update = (eno, data)=>{\r\n    return axios.put(baseURL+`/basic/emp/${eno}`,data, {headers: token});\r\n}\r\n// TODO: 삭제(eno) : 벡엔드 삭제 url: /basic/emp/deletion/{eno}\r\nconst remove = (eno)=>{\r\n    return axios.delete(baseURL+`/basic/emp/deletion/${eno}`, {headers: token});\r\n}\r\n// 객체 : getAll 넣어 export\r\nconst EmpService = {\r\n    getAll,\r\n    insert,\r\n    get,\r\n    update,\r\n    remove\r\n}\r\nexport default EmpService;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,MAAM,GAAGA,CAACC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,KAAK;EAC7D,OAAOL,KAAK,CACRM,GAAG,CAACL,OAAO,GAAC,4BAA4BE,aAAa,cAAcC,SAAS,uBAAuBC,kBAAkB,EAAE,EAAE;IAACE,OAAO,EAAEC;EAAK,CAAC,CAAC;AAClJ,CAAC;AACD;AACA,MAAMC,MAAM,GAAIC,IAAI,IAAK;EACrB,OAAOV,KAAK,CAACW,IAAI,CAACV,OAAO,GAAC,YAAY,EAAES,IAAI,EAAE;IAACH,OAAO,EAAEC;EAAK,CAAC,CAAC;AACnE,CAAC;AACD;AACA,MAAMF,GAAG,GAAIM,GAAG,IAAK;EACjB,OAAOZ,KAAK,CAACM,GAAG,CAACL,OAAO,GAAC,cAAcW,GAAG,EAAE,EAAE;IAACL,OAAO,EAAEC;EAAK,CAAC,CAAC;AACnE,CAAC;AACD;AACA,MAAMK,MAAM,GAAGA,CAACD,GAAG,EAAEF,IAAI,KAAG;EACxB,OAAOV,KAAK,CAACc,GAAG,CAACb,OAAO,GAAC,cAAcW,GAAG,EAAE,EAACF,IAAI,EAAE;IAACH,OAAO,EAAEC;EAAK,CAAC,CAAC;AACxE,CAAC;AACD;AACA,MAAMO,MAAM,GAAIH,GAAG,IAAG;EAClB,OAAOZ,KAAK,CAACgB,MAAM,CAACf,OAAO,GAAC,uBAAuBW,GAAG,EAAE,EAAE;IAACL,OAAO,EAAEC;EAAK,CAAC,CAAC;AAC/E,CAAC;AACD;AACA,MAAMS,UAAU,GAAG;EACff,MAAM;EACNO,MAAM;EACNH,GAAG;EACHO,MAAM;EACNE;AACJ,CAAC;AACD,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}