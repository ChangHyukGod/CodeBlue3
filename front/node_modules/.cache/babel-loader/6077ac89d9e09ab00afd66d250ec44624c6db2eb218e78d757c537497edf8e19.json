{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MemberService from \"@/services/auth/MemberService\";\nexport default {\n  data() {\n    return {\n      user: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n  },\n  methods: {\n    // 샘플 => 수정 : 추천(방법)\n    async login() {\n      try {\n        let response = await MemberService.login(this.user);\n        console.log(response.data); // 디버깅\n        // TODO: 공유변수 : loggedIn 상태 변경 : true\n        // TODO: vue/react 공유저장소 단점 : 새로고침(정보 사라짐)\n        // TODO: 보완 : 쿠키/로컬스토리지 등 이용 : 값을 저장\n        //       (웹브라우저 기본 기능)\n        this.$store.state.loggedIn = true;\n        // TODO: 사용법(저장) : localStorage.setItem(\"키\", 값(문자열));\n        // js : 객체 -> 문자열 변환 : JSON.stringify(객체)\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        // 홈으로 강제이동 : /\n        this.$router.push(\"/\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  // TODO: 화면이 뜰 때 이미 회원이면 홈(/)으로 강제이동\n  mounted() {\n    // TODO: vue 의 전역변수(공유변수) 관리하는 곳\n    if (this.$store.state.loggedIn == true) {\n      this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["MemberService","data","user","email","password","methods","login","response","console","log","$store","state","loggedIn","localStorage","setItem","JSON","stringify","$router","push","error","mounted"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\auth\\LoginView.vue"],"sourcesContent":["// LoginView.vue // vueInit\r\n<template>\r\n  <div>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\r\n        <div class=\"card mt-5\">\r\n          <div class=\"card-body p-0\">\r\n            <!-- {/* Nested Row within Card Body */} -->\r\n            <div class=\"row\">\r\n              <!-- TODO: 이미지(왼쪽:강아지+사람) -->\r\n              <div class=\"col-lg-6\">\r\n                <img\r\n                  :src=\"require('@/assets/images/puppy-1920_1280_2.jpg')\"\r\n                  class=\"img-fluid\"\r\n                />\r\n              </div>\r\n              <!-- TODO: 입력양식(오른쪽) -->\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"p-5\">\r\n                  <div class=\"text-center\">\r\n                    <h1 class=\"h4 mb-4\">Welcome Back!</h1>\r\n                  </div>\r\n                  <div class=\"user\">\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"이메일을 넣기\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"패스워드 넣기\"\r\n                      />\r\n                    </div>\r\n\r\n                    <button class=\"btn btn-primary btn-user w-100 mb-3\"\r\n                    @click=\"login\">\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                  <hr />\r\n                  <div class=\"text-center\">\r\n                    <a class=\"small\" href=\"/register\"> Create an Account! </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MemberService from \"@/services/auth/MemberService\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 샘플 => 수정 : 추천(방법)\r\n    async login() {\r\n      try {\r\n         let response = await MemberService.login(this.user);\r\n         console.log(response.data); // 디버깅\r\n         // TODO: 공유변수 : loggedIn 상태 변경 : true\r\n         // TODO: vue/react 공유저장소 단점 : 새로고침(정보 사라짐)\r\n         // TODO: 보완 : 쿠키/로컬스토리지 등 이용 : 값을 저장\r\n         //       (웹브라우저 기본 기능)\r\n         this.$store.state.loggedIn = true;\r\n         // TODO: 사용법(저장) : localStorage.setItem(\"키\", 값(문자열));\r\n         // js : 객체 -> 문자열 변환 : JSON.stringify(객체)\r\n         localStorage.setItem(\"user\",JSON.stringify(response.data));\r\n         // 홈으로 강제이동 : /\r\n         this.$router.push(\"/\");\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n    },\r\n  },\r\n  // TODO: 화면이 뜰 때 이미 회원이면 홈(/)으로 강제이동\r\n  mounted() {\r\n    // TODO: vue 의 전역변수(공유변수) 관리하는 곳\r\n    if (this.$store.state.loggedIn == true) {\r\n      this.$router.push(\"/\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";AA0DA,OAAOA,aAAY,MAAO,+BAA+B;AACzD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACD,IAAIC,QAAO,GAAI,MAAMP,aAAa,CAACM,KAAK,CAAC,IAAI,CAACJ,IAAI,CAAC;QACnDM,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACN,IAAI,CAAC,EAAE;QAC5B;QACA;QACA;QACA;QACA,IAAI,CAACS,MAAM,CAACC,KAAK,CAACC,QAAO,GAAI,IAAI;QACjC;QACA;QACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAACN,IAAI,CAAC,CAAC;QAC1D;QACA,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACzB,EAAE,OAAOC,KAAK,EAAE;QACbX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;MACrB;IACF;EACF,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,IAAI,CAACV,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,EAAE;MACtC,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}