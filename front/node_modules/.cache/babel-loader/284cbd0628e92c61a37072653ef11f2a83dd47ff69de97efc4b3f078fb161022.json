{"ast":null,"code":"// services/advanced/FileDbService.js\nimport axios from \"axios\";\nconst baseURL = \"http://localhost:8000/api\";\n\n// 전체조회\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\n  return axios.get(baseURL + `/advanced/fileDb?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`);\n};\n// insert(upload)\n// form 태그 : input 양식, multipart 전송\n// TODO: form 태그 == FormData 객체\nconst insertForm = data => {\n  console.log(data);\n  // FormData 객체 생성\n  let formData = new FormData();\n  // FormData 객체에 넣기 : .append(키(벡엔드변수명), 값)\n  formData.append(\"fileTitle\", data.fileTitle);\n  formData.append(\"fileContent\", data.fileContent);\n  formData.append(\"image\", data.image);\n  return formData;\n};\n// insert 함수\n// 다운로드 함수 : 첨부파일입니다.(헤더명시)\nconst insert = data => {\n  let form = insertForm(data);\n  return axios.post(baseURL + \"/advanced/fileDb/add\", form, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\n\n// 상세 조회 : 기본키(uuid)\nconst get = uuid => {\n  return axios.get(baseURL + `/advanced/fileDb/get/${uuid}`);\n};\n// 수정 \nconst update = (uuid, data) => {\n  let form = insertForm(data);\n  return axios.put(baseURL + `/advanced/fileDb/update/${uuid}`, form, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\n// 삭제\nconst remove = uuid => {\n  return axios.delete(baseURL + `/advanced/fileDb/deletion/${uuid}`);\n};\nconst FileDbService = {\n  getAll,\n  insert,\n  get,\n  update,\n  remove\n};\nexport default FileDbService;","map":{"version":3,"names":["axios","baseURL","getAll","searchKeyword","pageIndex","recordCountPerPage","get","insertForm","data","console","log","formData","FormData","append","fileTitle","fileContent","image","insert","form","post","headers","uuid","update","put","remove","delete","FileDbService"],"sources":["D:/Work/10_Springboot/04_Login/frontend/src/services/advanced/FileDbService.js"],"sourcesContent":["// services/advanced/FileDbService.js\r\nimport axios from \"axios\";\r\nconst baseURL = \"http://localhost:8000/api\";\r\n\r\n// 전체조회\r\nconst getAll = (searchKeyword, pageIndex, recordCountPerPage) => {\r\n  return axios.get(\r\n    baseURL +\r\n      `/advanced/fileDb?searchKeyword=${searchKeyword}&pageIndex=${pageIndex}&recordCountPerPage=${recordCountPerPage}`\r\n  );\r\n};\r\n// insert(upload)\r\n// form 태그 : input 양식, multipart 전송\r\n// TODO: form 태그 == FormData 객체\r\nconst insertForm = (data)=>{\r\n  console.log(data)\r\n  // FormData 객체 생성\r\n  let formData = new FormData();\r\n  // FormData 객체에 넣기 : .append(키(벡엔드변수명), 값)\r\n  formData.append(\"fileTitle\", data.fileTitle);\r\n  formData.append(\"fileContent\", data.fileContent);\r\n  formData.append(\"image\", data.image);\r\n\r\n  return formData;\r\n}\r\n// insert 함수\r\n// 다운로드 함수 : 첨부파일입니다.(헤더명시)\r\nconst insert = (data) => {\r\n  let form = insertForm(data);\r\n  return axios.post(baseURL+\"/advanced/fileDb/add\", form,\r\n    {\r\n      headers: {\"Content-Type\": \"multipart/form-data\",}\r\n    }\r\n  );\r\n}\r\n\r\n// 상세 조회 : 기본키(uuid)\r\nconst get = (uuid)=>{\r\n  return axios.get(baseURL+`/advanced/fileDb/get/${uuid}`);\r\n}\r\n// 수정 \r\nconst update = (uuid, data)=>{\r\n  let form = insertForm(data);\r\n  return axios.put(baseURL+`/advanced/fileDb/update/${uuid}`, form,\r\n    {\r\n      headers: {\"Content-Type\": \"multipart/form-data\",}\r\n    }\r\n  );  \r\n}\r\n// 삭제\r\nconst remove = (uuid)=>{\r\n  return axios.delete(baseURL+`/advanced/fileDb/deletion/${uuid}`);\r\n}\r\nconst FileDbService = {\r\n    getAll,\r\n    insert,\r\n    get,\r\n    update,\r\n    remove\r\n}\r\nexport default FileDbService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,MAAM,GAAGA,CAACC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,KAAK;EAC/D,OAAOL,KAAK,CAACM,GAAG,CACdL,OAAO,GACL,kCAAkCE,aAAa,cAAcC,SAAS,uBAAuBC,kBAAkB,EACnH,CAAC;AACH,CAAC;AACD;AACA;AACA;AACA,MAAME,UAAU,GAAIC,IAAI,IAAG;EACzBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB;EACA,IAAIG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7B;EACAD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEL,IAAI,CAACM,SAAS,CAAC;EAC5CH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEL,IAAI,CAACO,WAAW,CAAC;EAChDJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAACQ,KAAK,CAAC;EAEpC,OAAOL,QAAQ;AACjB,CAAC;AACD;AACA;AACA,MAAMM,MAAM,GAAIT,IAAI,IAAK;EACvB,IAAIU,IAAI,GAAGX,UAAU,CAACC,IAAI,CAAC;EAC3B,OAAOR,KAAK,CAACmB,IAAI,CAAClB,OAAO,GAAC,sBAAsB,EAAEiB,IAAI,EACpD;IACEE,OAAO,EAAE;MAAC,cAAc,EAAE;IAAsB;EAClD,CACF,CAAC;AACH,CAAC;;AAED;AACA,MAAMd,GAAG,GAAIe,IAAI,IAAG;EAClB,OAAOrB,KAAK,CAACM,GAAG,CAACL,OAAO,GAAC,wBAAwBoB,IAAI,EAAE,CAAC;AAC1D,CAAC;AACD;AACA,MAAMC,MAAM,GAAGA,CAACD,IAAI,EAAEb,IAAI,KAAG;EAC3B,IAAIU,IAAI,GAAGX,UAAU,CAACC,IAAI,CAAC;EAC3B,OAAOR,KAAK,CAACuB,GAAG,CAACtB,OAAO,GAAC,2BAA2BoB,IAAI,EAAE,EAAEH,IAAI,EAC9D;IACEE,OAAO,EAAE;MAAC,cAAc,EAAE;IAAsB;EAClD,CACF,CAAC;AACH,CAAC;AACD;AACA,MAAMI,MAAM,GAAIH,IAAI,IAAG;EACrB,OAAOrB,KAAK,CAACyB,MAAM,CAACxB,OAAO,GAAC,6BAA6BoB,IAAI,EAAE,CAAC;AAClE,CAAC;AACD,MAAMK,aAAa,GAAG;EAClBxB,MAAM;EACNe,MAAM;EACNX,GAAG;EACHgB,MAAM;EACNE;AACJ,CAAC;AACD,eAAeE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}