{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DeptService from '@/services/basic/DeptService';\nexport default {\n  data() {\n    return {\n      dept: {\n        dno: \"\",\n        // 기본키\n        dname: \"\",\n        loc: \"\"\n      }\n    };\n  },\n  methods: {\n    // 함수작성\n    // TODO: 상세조회\n    async getDetail(dno) {\n      try {\n        let response = await DeptService.get(dno);\n        console.log(response.data); // 디버깅\n        this.dept = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // TODO: 수정\n    async update() {\n      try {\n        let response = await DeptService.update(this.dept.dno, this.dept);\n        console.log(response.data); // 디버깅\n        // 전체조회 강제이동 : /dept\n        this.$router.push(\"/dept\");\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // TODO: 삭제\n    async remove() {\n      try {\n        let response = await DeptService.remove(this.dept.dno);\n        console.log(response.data); // 디버깅\n        // 전체조회 강제이동 : /dept\n        this.$router.push(\"/dept\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  // 화면이 최초 뜰때 자동실행\n  mounted() {\n    // 상세조회 : dno(부서번호:기본키)값\n    // TODO: 사용법) this.$route.params.변수명\n    //  => router/index.js : 메뉴등록 : /dept/:변수명\n    this.getDetail(this.$route.params.dno);\n  }\n};","map":{"version":3,"names":["DeptService","data","dept","dno","dname","loc","methods","getDetail","response","get","console","log","error","update","$router","push","remove","mounted","$route","params"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\basic\\dept\\DeptDetail.vue"],"sourcesContent":["// views/dept/DeptDetail.vue // vueInit\r\n<template>\r\n  <div>\r\n    <!-- dname -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"dname\"\r\n        placeholder=\"dname\"\r\n        v-model=\"dept.dname\"\r\n      />\r\n      <label for=\"dname\">dname</label>\r\n    </div>\r\n    <!-- loc -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"loc\"\r\n        placeholder=\"loc\"\r\n        v-model=\"dept.loc\"\r\n      />\r\n      <label for=\"loc\">loc</label>\r\n    </div>\r\n    <!-- 수정버튼 -->\r\n    <!-- m : 마진, e(end:오른쪽), s(start:왼쪽) -->\r\n    <button type=\"button\" \r\n            class=\"btn btn-warning me-2\" \r\n            @click=\"update\">수정</button>\r\n    <!-- 삭제버튼 -->\r\n    <button type=\"button\" \r\n            class=\"btn btn-danger\"\r\n            @click=\"remove\"\r\n            >삭제</button>\r\n  </div>\r\n</template>\r\n<script>\r\nimport DeptService from '@/services/basic/DeptService';\r\nexport default {\r\n    data() {\r\n        return {\r\n            dept: {\r\n                dno:\"\",   // 기본키\r\n                dname:\"\",\r\n                loc:\"\"\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        // 함수작성\r\n        // TODO: 상세조회\r\n        async getDetail(dno) {\r\n            try {\r\n              let response = await DeptService.get(dno);\r\n              console.log(response.data); // 디버깅\r\n              this.dept = response.data;\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n        },\r\n        // TODO: 수정\r\n        async update(){\r\n          try {\r\n            let response \r\n               = await DeptService.update(this.dept.dno, this.dept);\r\n            console.log(response.data); // 디버깅\r\n            // 전체조회 강제이동 : /dept\r\n            this.$router.push(\"/dept\");\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        },\r\n        // TODO: 삭제\r\n        async remove(){\r\n          try {\r\n            let response \r\n               = await DeptService.remove(this.dept.dno);\r\n            console.log(response.data); // 디버깅\r\n            // 전체조회 강제이동 : /dept\r\n            this.$router.push(\"/dept\");\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n    },\r\n    // 화면이 최초 뜰때 자동실행\r\n    mounted() {\r\n        // 상세조회 : dno(부서번호:기본키)값\r\n        // TODO: 사용법) this.$route.params.변수명\r\n        //  => router/index.js : 메뉴등록 : /dept/:변수명\r\n        this.getDetail(this.$route.params.dno);\r\n    },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";AAsCA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,GAAG,EAAC,EAAE;QAAI;QACVC,KAAK,EAAC,EAAE;QACRC,GAAG,EAAC;MACR;IACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;IACA;IACA,MAAMC,SAASA,CAACJ,GAAG,EAAE;MACjB,IAAI;QACF,IAAIK,QAAO,GAAI,MAAMR,WAAW,CAACS,GAAG,CAACN,GAAG,CAAC;QACzCO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACP,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACC,IAAG,GAAIM,QAAQ,CAACP,IAAI;MAC3B,EAAE,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACJ,CAAC;IACD;IACA,MAAMC,MAAMA,CAAA,EAAE;MACZ,IAAI;QACF,IAAIL,QAAO,GACN,MAAMR,WAAW,CAACa,MAAM,CAAC,IAAI,CAACX,IAAI,CAACC,GAAG,EAAE,IAAI,CAACD,IAAI,CAAC;QACvDQ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACP,IAAI,CAAC,EAAE;QAC5B;QACA,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAOH,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACD;IACA,MAAMI,MAAMA,CAAA,EAAE;MACZ,IAAI;QACF,IAAIR,QAAO,GACN,MAAMR,WAAW,CAACgB,MAAM,CAAC,IAAI,CAACd,IAAI,CAACC,GAAG,CAAC;QAC5CO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACP,IAAI,CAAC,EAAE;QAC5B;QACA,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAOH,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF;EACJ,CAAC;EACD;EACAK,OAAOA,CAAA,EAAG;IACN;IACA;IACA;IACA,IAAI,CAACV,SAAS,CAAC,IAAI,CAACW,MAAM,CAACC,MAAM,CAAChB,GAAG,CAAC;EAC1C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}