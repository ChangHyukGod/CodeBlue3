{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EmpService from \"@/services/basic/EmpService\";\nexport default {\n  data() {\n    return {\n      emp: {\n        eno: \"\",\n        ename: \"\",\n        manager: \"\",\n        job: \"\",\n        hiredate: \"\",\n        salary: \"\",\n        commission: \"\",\n        dno: \"\"\n      }\n    };\n  },\n  methods: {\n    // 함수작성\n    // TODO: 상세조회\n    async getDetail(eno) {\n      try {\n        let response = await EmpService.get(eno);\n        console.log(response.data); // 디버깅\n        this.emp = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // TODO: 수정\n    async update() {\n      try {\n        let response = await EmpService.update(this.emp.eno, this.emp);\n        console.log(response.data); // 디버깅\n        this.$router.push(\"/emp\");\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // TODO: 삭제\n    async remove() {\n      try {\n        let response = await EmpService.remove(this.emp.eno);\n        console.log(response.data); // 디버깅\n        // 전체조회 강제이동 : /emp\n        this.$router.push(\"/emp\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  mounted() {\n    this.getDetail(this.$route.params.eno);\n  }\n};","map":{"version":3,"names":["EmpService","data","emp","eno","ename","manager","job","hiredate","salary","commission","dno","methods","getDetail","response","get","console","log","error","update","$router","push","remove","mounted","$route","params"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\basic\\emp\\EmpDetail.vue"],"sourcesContent":["// views/basic/emp/EmpDetail.vue // vueInit // 연습) 상세조회 : url(/emp/:eno)\r\n메뉴등록 // 연습2) 디자인 + update() 함수만 만들기 // getDetail() 실행해서\r\nalert(eno) 띄우기 // 연습 2) EmpDetail 상세조회 데이터를 화면에 표시하세요 //\r\nEmpService.js : get() 함수 작성 // EmpDetail.vue : getDetail() 함수 작성 //\r\n연습3) 아래 update() 함수를 작성하세요 // EmpService.js : update() 함수 //\r\nEmpDetail.vue : update() 함수 // 연습4) 아래 remove() 함수 작성 // EmpService.js\r\n: remove() // EmpDetail.vue : remove()\r\n<template>\r\n  <div>\r\n    <!-- TODO: 저장(sql : insert(기본키(eno)(시퀀스가 만듬))) -->\r\n    <!-- ename -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"ename\"\r\n        placeholder=\"ename\"\r\n        v-model=\"emp.ename\"\r\n      />\r\n      <label for=\"ename\">ename</label>\r\n    </div>\r\n    <!-- job -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"job\"\r\n        placeholder=\"job\"\r\n        v-model=\"emp.job\"\r\n      />\r\n      <label for=\"job\">job</label>\r\n    </div>\r\n    <!-- manager -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"manager\"\r\n        placeholder=\"manager\"\r\n        v-model=\"emp.manager\"\r\n      />\r\n      <label for=\"manager\">manager</label>\r\n    </div>\r\n    <!-- hiredate -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"hiredate\"\r\n        placeholder=\"hiredate\"\r\n        v-model=\"emp.hiredate\"\r\n      />\r\n      <label for=\"hiredate\">hiredate</label>\r\n    </div>\r\n    <!-- salary -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"salary\"\r\n        placeholder=\"salary\"\r\n        v-model=\"emp.salary\"\r\n      />\r\n      <label for=\"salary\">salary</label>\r\n    </div>\r\n    <!-- commission -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"commission\"\r\n        placeholder=\"commission\"\r\n        v-model=\"emp.commission\"\r\n      />\r\n      <label for=\"commission\">commission</label>\r\n    </div>\r\n    <!-- dno -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"dno\"\r\n        placeholder=\"dno\"\r\n        v-model=\"emp.dno\"\r\n      />\r\n      <label for=\"dno\">dno</label>\r\n    </div>\r\n\r\n    <!-- 수정버튼 -->\r\n    <button type=\"button\" class=\"btn btn-warning me-2\" @click=\"update\">\r\n      수정\r\n    </button>\r\n    <!-- 삭제버튼 -->\r\n    <button type=\"button\" class=\"btn btn-danger\" @click=\"remove\">삭제</button>\r\n  </div>\r\n</template>\r\n<script>\r\nimport EmpService from \"@/services/basic/EmpService\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      emp: {\r\n        eno: \"\",\r\n        ename: \"\",\r\n        manager: \"\",\r\n        job: \"\",\r\n        hiredate: \"\",\r\n        salary: \"\",\r\n        commission: \"\",\r\n        dno: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 함수작성\r\n    // TODO: 상세조회\r\n    async getDetail(eno) {\r\n      try {\r\n        let response = await EmpService.get(eno);\r\n        console.log(response.data); // 디버깅\r\n        this.emp = response.data;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    // TODO: 수정\r\n    async update() {\r\n      try {\r\n        let response = await EmpService.update(this.emp.eno, this.emp);\r\n        console.log(response.data); // 디버깅\r\n        this.$router.push(\"/emp\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    // TODO: 삭제\r\n    async remove() {\r\n      try {\r\n        let response = await EmpService.remove(this.emp.eno);\r\n        console.log(response.data); // 디버깅\r\n        // 전체조회 강제이동 : /emp\r\n        this.$router.push(\"/emp\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getDetail(this.$route.params.eno);\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";AAiGA,OAAOA,UAAS,MAAO,6BAA6B;AACpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QACHC,GAAG,EAAE,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,EAAE;QACdC,GAAG,EAAE;MACP;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACA,MAAMC,SAASA,CAACT,GAAG,EAAE;MACnB,IAAI;QACF,IAAIU,QAAO,GAAI,MAAMb,UAAU,CAACc,GAAG,CAACX,GAAG,CAAC;QACxCY,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACC,GAAE,GAAIW,QAAQ,CAACZ,IAAI;MAC1B,EAAE,OAAOgB,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACD;IACA,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAIL,QAAO,GAAI,MAAMb,UAAU,CAACkB,MAAM,CAAC,IAAI,CAAChB,GAAG,CAACC,GAAG,EAAE,IAAI,CAACD,GAAG,CAAC;QAC9Da,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;MAC3B,EAAE,OAAOH,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACD;IACA,MAAMI,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAIR,QAAO,GAAI,MAAMb,UAAU,CAACqB,MAAM,CAAC,IAAI,CAACnB,GAAG,CAACC,GAAG,CAAC;QACpDY,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5B;QACA,IAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;MAC3B,EAAE,OAAOH,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACV,SAAS,CAAC,IAAI,CAACW,MAAM,CAACC,MAAM,CAACrB,GAAG,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}