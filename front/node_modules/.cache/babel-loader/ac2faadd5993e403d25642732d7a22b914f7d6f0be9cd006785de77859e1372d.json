{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EmpService from '@/services/basic/EmpService';\nexport default {\n  data() {\n    return {\n      emp: {\n        ename: \"\",\n        manager: \"\",\n        job: \"\",\n        hiredate: \"\",\n        salary: \"\",\n        commission: \"\",\n        dno: \"\"\n      }\n    };\n  },\n  methods: {\n    async save() {\n      try {\n        let response = await EmpService.insert(this.emp);\n        console.log(response.data); // 디버깅\n        this.$router.push(\"/emp\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["EmpService","data","emp","ename","manager","job","hiredate","salary","commission","dno","methods","save","response","insert","console","log","$router","push","error"],"sources":["D:\\Work\\10_Springboot\\04_Login\\frontend\\src\\views\\basic\\emp\\AddEmp.vue"],"sourcesContent":["// views/basic/emp/AddEmp.vue // vueInit // 메뉴등록 : url(/add-emp) //\r\nrouter/index.js(메뉴 등록) // 디자인 및 저장 클릭: alert(\"테스트\") // 2) 연습)\r\nsave 함수에 저장기능을 추가하세요 // services/basic/EmpService.js : insert 함수\r\n작성 // views/basic/emp/AddEmp.vue : save 함수 작성\r\n<template>\r\n  <div>\r\n    <!-- TODO: 저장(sql : insert(기본키(eno)(시퀀스가 만듬))) -->\r\n    <!-- ename -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"ename\"\r\n        placeholder=\"ename\"\r\n        v-model=\"emp.ename\"\r\n      />\r\n      <label for=\"ename\">ename</label>\r\n    </div>\r\n    <!-- job -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"job\"\r\n        placeholder=\"job\"\r\n        v-model=\"emp.job\"\r\n      />\r\n      <label for=\"job\">job</label>\r\n    </div>\r\n    <!-- manager -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"manager\"\r\n        placeholder=\"manager\"\r\n        v-model=\"emp.manager\"\r\n      />\r\n      <label for=\"manager\">manager</label>\r\n    </div>\r\n    <!-- hiredate -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"hiredate\"\r\n        placeholder=\"hiredate\"\r\n        v-model=\"emp.hiredate\"\r\n      />\r\n      <label for=\"hiredate\">hiredate</label>\r\n    </div>\r\n    <!-- salary -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"salary\"\r\n        placeholder=\"salary\"\r\n        v-model=\"emp.salary\"\r\n      />\r\n      <label for=\"salary\">salary</label>\r\n    </div>\r\n    <!-- commission -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"commission\"\r\n        placeholder=\"commission\"\r\n        v-model=\"emp.commission\"\r\n      />\r\n      <label for=\"commission\">commission</label>\r\n    </div>\r\n    <!-- dno -->\r\n    <div class=\"form-floating mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"dno\"\r\n        placeholder=\"dno\"\r\n        v-model=\"emp.dno\"\r\n      />\r\n      <label for=\"dno\">dno</label>\r\n    </div>\r\n\r\n    <!-- 버튼 -->\r\n    <button type=\"button\" class=\"btn btn-primary\" @click=\"save\">저장</button>\r\n  </div>\r\n</template>\r\n<script>\r\nimport EmpService from '@/services/basic/EmpService';\r\nexport default {\r\n  data() {\r\n    return {\r\n      emp: {\r\n        ename: \"\",\r\n        manager: \"\",\r\n        job: \"\",\r\n        hiredate: \"\",\r\n        salary: \"\",\r\n        commission: \"\",\r\n        dno: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async save() {\r\n      try {\r\n        let response = await EmpService.insert(this.emp);\r\n        console.log(response.data); // 디버깅\r\n        this.$router.push(\"/emp\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";AA0FA,OAAOA,UAAS,MAAO,6BAA6B;AACpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QACHC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,EAAE;QACdC,GAAG,EAAE;MACP;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,IAAIA,CAAA,EAAG;MACX,IAAI;QACF,IAAIC,QAAO,GAAI,MAAMZ,UAAU,CAACa,MAAM,CAAC,IAAI,CAACX,GAAG,CAAC;QAChDY,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACX,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;MAC3B,EAAE,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}