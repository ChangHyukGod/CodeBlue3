coupons - 쿠폰DB
- id		: 고유 ID (숫자형, 기본키)
- value		: 할인 값 (숫자, 소수점 2자리 까지)
- name		: 이름 (문자열, 50자)
- member_email	: 회원 테이블의 ID (외래 키)

faq - FAQ_DB
- fno		: 고유 ID (숫자 기본키)
- title		: 제목 (문자열 100자)
- question	: 질문 (문자열 255자)
- answer		: 답변 (CLOB형) 
- insert_time	: 데이터 생성 시간 (DATE형)
- update_time	: 데이터 업데이트 시간 (DATE형)

member - 회원DB
- email		: 사용자 이메일(문자열 100자)
- password	: 패스워드(문자열 100자)
- name		: 이름 (문자열 100자)
- code_name	: 로그인 웹토큰 자동생성 컬럼(문자열 20자)
- ssn		: 인적사항 확인용 주민번호(문자열 30자)

reviews - 리뷰게시판DB
- review_id	: 리뷰 ID(자동생성 숫자형)
- title		: 리뷰 제목 ( 문자열 100자)
- content		: 리뷰 내용 ( CLOB형 )
- rating		: 평점 (숫자형)
- image-url	: 이미지URL(문자열 255자)
- author_email	: 작성자 이메일 (문자열 100자)
- target_id	: 리뷰 대상의 ID (문자열 255)
- created_at	: 작성 일시 (현재 시간 자동 저장 DATE형)
- updated_at	: 수정 일시 (DATE 형)

tour - MAIN_DB
- tour_id		: 고유 ID ( 문자열 255자 )
- name		: 이름 ( 문자열 100자 )
- location	: 지역 ( 문자열 255자 )
- description	: 설명 ( CLOB형 )
- price		: 가격 (문자열 100자 )

room - 방예약DB
- room_id	: 고유 ID (숫자형)
- tour_id		: 상품 고유 ID (문자열 100자)
- room_name	: 방 이름( 문자열 100자 )
- capacity	: 최대인원 ( 숫자형 )
- price		: 가격 ( 숫자형 )
- description	: 설명 ( 문자형 500자) 
- room_data	: 이미지 바이너리 데이터(BLOB형)
- room_url	: 이미지URL(문자열 1000자)
- check_in	: 체크인 시간 (문자열 100자)
- check_out	: 체크아웃 시간 (문자열 100자)

recommend - 여행지 추천DB
- td_id		: 여행지 고유 ID(기본키 숫자형)
- td_name	: 여행지 이름(문자열 255자)
- loc		: 위치(문자열 255자)
- description	: 여행지 설명(CLOB형)
- image_url	: 이미지 url(문자열 1000자)
- mage_data	: 이미지 데이터(BLOB형)

Banner - 배너 출력용 데이터
- B_ID 		: 배너 고유 ID(숫자형, 기본키)
- B_DATA 	: 이미지 데이터(BLOB형)
- B_URL		: 이미지 URL(문자열 500자)
- TOUR_ID 	: 배너 상세조회를 위한 투어 ID(외래키)

inquiry - 1대1 문의 DB
- I_ID		: 고유 ID(숫자형 , 기본키)
- I_TITLE		: 제목( 문자형 100자)
- I_CONTENT	: 내용  (CLOB 형)
- I_URL		: 이미지 URL(문자형 1000자)
- I_DATA		: 이미지 데이터(BLOB형)

CREATE TABLE "COUPONS" 
(
    "ID"           NUMBER, 
    "VALUE"        NUMBER(10,2) NOT NULL, 
    "NAME"         VARCHAR2(50 BYTE) NOT NULL, 
    "MEMBER_EMAIL" VARCHAR2(20 BYTE),
    CONSTRAINT "PK_COUPONS" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MEMBER_EMAIL" FOREIGN KEY ("MEMBER_EMAIL")
        REFERENCES "MEMBER" ("EMAIL")
);

CREATE TABLE "FAQ" 
(
    "FNO"          NUMBER, 
    "TITLE"        VARCHAR2(100 BYTE), 
    "QUESTION"     VARCHAR2(255 BYTE), 
    "ANSWER"       CLOB, 
    "INSERT_TIME"  DATE, 
    "UPDATE_TIME"  DATE, 
    "FAQ_DATA"     BLOB, 
    "FAQ_URL"      VARCHAR2(255 BYTE),
    CONSTRAINT "PK_FAQ" PRIMARY KEY ("FNO")
);

CREATE TABLE "MEMBER" 
(
    "EMAIL"     VARCHAR2(100 BYTE) NOT NULL, 
    "PASSWORD"  VARCHAR2(100 BYTE) NOT NULL, 
    "NAME"      VARCHAR2(100 BYTE) NOT NULL, 
    "CODE_NAME" VARCHAR2(20 BYTE), 
    "SSN"       VARCHAR2(30 BYTE),
    CONSTRAINT "PK_MEMBER" PRIMARY KEY ("EMAIL")
);

CREATE TABLE "REVIEWS" 
(
    "REVIEW_ID"    NUMBER GENERATED BY DEFAULT AS IDENTITY, 
    "TITLE"        VARCHAR2(100 BYTE) NOT NULL, 
    "CONTENT"      CLOB NOT NULL, 
    "RATING"       NUMBER(2,1) NOT NULL CHECK ("RATING" BETWEEN 0 AND 5), 
    "IMAGE_URL"    VARCHAR2(255 BYTE), 
    "AUTHOR_EMAIL" VARCHAR2(100 BYTE) NOT NULL, 
    "TARGET_ID"    NUMBER NOT NULL, 
    "CREATED_AT"   TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
    "UPDATED_AT"   TIMESTAMP (6), 
    "LOC"          VARCHAR2(500 BYTE),
    CONSTRAINT "PK_REVIEWS" PRIMARY KEY ("REVIEW_ID"),
    CONSTRAINT "FK_TOUR_ID" FOREIGN KEY ("TARGET_ID") REFERENCES "TOUR" ("TOUR_ID"),
    CONSTRAINT "FK_AUTHOR_EMAIL" FOREIGN KEY ("AUTHOR_EMAIL") REFERENCES "MEMBER" ("EMAIL")
);

CREATE TABLE ROOM 
(
    ROOM_ID NUMBER PRIMARY KEY,       -- 방 번호 (PK)
    TOUR_ID NUMBER NOT NULL,          -- 숙소 번호 (FK, TOUR 테이블과 연결)
    ROOM_NAME VARCHAR2(100),          -- 방 이름
    CAPACITY NUMBER,                  -- 최대 인원
    PRICE NUMBER,                     -- 가격 (숫자로 변경)
    DESCRIPTION VARCHAR2(500),        -- 설명
    FOREIGN KEY (TOUR_ID) REFERENCES TOUR (TOUR_ID) ON DELETE CASCADE,
    ROOM_DATA BLOB,                     -- 바이너리 파일(이미지파일)
    ROOM_URL VARCHAR2(1000),
    CHECK_IN VARCHAR2(100),
    CHECK_OUT VARCHAR2(100)
);

CREATE TABLE ROOM_IMAGES (
    IMAGE_ID NUMBER NOT NULL PRIMARY KEY,
    ROOM_ID NUMBER,
    IMAGE_DATA BLOB,
    IMAGE_URL VARCHAR(1000),
    FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID) ON DELETE CASCADE  -- 연쇄 삭제 설정
);

CREATE TABLE "TOUR" 
(
    "TOUR_ID"      NUMBER PRIMARY KEY, 
    "NAME"         VARCHAR2(100 BYTE) NOT NULL, 
    "LOCATION"     VARCHAR2(255 BYTE) NOT NULL, 
    "DESCRIPTION"  CLOB, 
    "PRICE"        VARCHAR2(100 BYTE) NOT NULL, 
    "TOUR_DATA"    BLOB, 
    "TOUR_FILE_URL" VARCHAR2(1000 BYTE)
);

CREATE TABLE "RECOMMEND" 
(
    "TD_ID" NUMBER PRIMARY KEY,
    "TD_NAME" VARCHAR2(255 BYTE) NOT NULL,
    "LOC" VARCHAR2(255 BYTE) NOT NULL,
    "DESCRIPTION" CLOB,
    "IMAGE_URL" VARCHAR2(1000 BYTE),
    "IMAGE_DATA " BLOB
);

CREATE TABLE "BANNER"
(
    "B_ID" NUMBER PRIMARY KEY,
    "B_URL" VARCHAR2(1000 BYTE),
    "B_DATA " BLOB,
    "TOUR_ID NUMBER,
    CONSTRAINT "FK_TOUR_ID" FOREIGN KEY ("TOUR_ID") REFERENCES "TOUR" ("TOUR_ID"),
);

CREATE TABLE "INQUIRY"
(
    "I_ID" NUMBER PRIMARY KEY,
    "I_TITLE VARCHAR2(100 BYTE),
    "I_CONTENT" CLOB,
    "I_URL" VARCHAR2(1000 BYTE),
    "I_DATA " BLOB
);

CREATE TABLE "COMMENTS" 
(
    "COM_ID" NUMBER PRIMARY KEY,
    "COMMENT" VARCHAR2(500) NOT NULL,
    "EMAIL" VARCHAR2(200 BYTE) NOT NULL,
    "CREATED_AT" TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT "FK_MEMBER_EM" FOREIGN KEY ("EMAIL") REFERENCES "MEMBER" ("EMAIL")
);

시퀀스

CREATE SEQUENCE  "ACCOMMODATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE "COUPONS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 47 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "FAQ_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "PAYMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "PROMOTION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "RECOMMEND_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "RESERVATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "REVIEW_REPLY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE "TOUR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 84 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "USER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "BANNER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

CREATE SEQUENCE  "COMMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

